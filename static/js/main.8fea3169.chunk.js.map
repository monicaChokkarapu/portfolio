{"version":3,"sources":["scss/images/dark_keyboard.jpg","scss/images/coding_laptop.jpg","constants/Routes.js","HeaderMenu.jsx","Header.jsx","Home.jsx","ProjectCard.jsx","Projects.jsx","Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ROUTES","HeaderMenu","useState","menuState","setMenuState","onClick","e","key","selectedKeys","mode","Item","to","Header","style","padding","ghost","title","fontSize","fontFamily","border","extra","Home","position","textAlign","color","src","darkKeyboard","alt","width","paddingLeft","top","marginTop","ProjectCard","description","className","window","open","hoverable","bordered","Projects","display","flexDirection","alignItems","background","gutter","span","validateMessages","required","types","email","number","range","Contact","name","onFinish","values","console","log","label","rules","type","TextArea","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fea3169.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dark_keyboard.52d9f87b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coding_laptop.5a147418.jpg\";","const ROUTES = {\n    HOME: '/home',\n    PROJECTS: '/projects',\n    CONTACT: '/contact',\n    BLOG: '/blog',\n    ABOUT: '/about'\n};\n\nexport {ROUTES};\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Menu} from 'antd';\nimport {ROUTES} from 'constants/Routes.js';\n\n\nfunction HeaderMenu() {\n    const [menuState,\n        setMenuState] = useState('home');\n\n    const handleClick = e => {\n        setMenuState(e.key);\n    };\n    return (\n        <Menu onClick={handleClick} selectedKeys={[menuState]} mode=\"horizontal\">\n            <Menu.Item key=\"home\">\n              <Link to={ROUTES.HOME}>Home</Link>\n            </Menu.Item>\n            <Menu.Item key=\"projects\">\n              <Link to={ROUTES.PROJECTS}>Projects</Link>\n            </Menu.Item>\n            <Menu.Item key=\"contact\">\n              <Link to={ROUTES.CONTACT}>Contact</Link>\n            </Menu.Item>\n        </Menu>\n    )\n}\n\nexport default HeaderMenu;","import React from 'react'\nimport {PageHeader} from 'antd';\nimport HeaderMenu from './HeaderMenu';\n\nfunction Header() {\n    return (\n        <div style={{\n            'backgroundColor': '#f5f5f5',\n            padding: '24px'\n          }}>\n            <PageHeader\n                ghost={false}\n                title={<div style={{\n                    fontSize: 'larger',\n                    fontFamily: 'sans-serif',\n                    padding: '5px',\n                    border: '4px solid',\n                }}>MC</div>}\n                extra={[<HeaderMenu/>]}>\n            </PageHeader>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react'\nimport codingLaptop from 'scss/images/coding_laptop.jpg';\nimport darkKeyboard from 'scss/images/dark_keyboard.jpg';\n\nfunction Home() {\n    return (\n        <div style={{\n            position: 'relative',\n            textAlign: 'center',\n            color: 'white'\n          }}>\n            <img src={darkKeyboard} alt='' style={{width: '100%'}}></img>\n            <div style={{\n                position: 'absolute',\n                paddingLeft: '150px',\n                top: '8px',\n                fontFamily: 'monospace',\n                fontSize: '35px',\n                marginTop: '30px'\n            }}>\n                Hello I am Monica. I am a UI developer living in Milpitas, California.\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport {Card} from 'antd';\n\nfunction ProjectCard({description}) {\n    const onCardClick = () => window.open('https://ecommerce-64f3a.web.app');\n    return (\n        <div className=\"site-card-border-less-wrapper\" onClick={onCardClick}>\n            <Card title=\"E Commerce\" hoverable={true} bordered={true} style={{ width: 300 }}>\n                <text>{description}</text>\n            </Card>\n      </div>\n    )\n}\n\nexport default ProjectCard;\n","import React from 'react';\nimport { Card, Col, Row } from 'antd';\nimport ProjectCard from './ProjectCard';\n\nfunction Projects() {\n    return (\n        <>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            }}>\n                <text style={{fontFamily: 'monospace',\n                    fontSize: '35px',\n                    marginTop: '30px'\n                }}>\n                These are my projects.\n                </text>\n            </div>\n            <div style={{\n                padding: '30px',\n                background: '#ececec'\n            }}>\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <ProjectCard description='E commerce web site like amazon.'/>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default Projects\n","import React from 'react'\nimport {Form, Input, InputNumber, Button} from 'antd';\n\nconst validateMessages = {\n    required: '${label} is required!',\n    types: {\n        email: '${label} is not validate email!',\n        number: '${label} is not a validate number!'\n    },\n    number: {\n        range: '${label} must be between ${min} and ${max}'\n    }\n};\nconst layout = {\n    labelCol: {\n        span: 8\n    },\n    wrapperCol: {\n        span: 16\n    }\n};\n\nfunction Contact() {\n    const onFinish = (values) => {\n        console.log(values);\n    };\n    return (\n        <Form\n            name=\"nest-messages\"\n            onFinish={onFinish}\n            validateMessages={validateMessages}>\n            <Form.Item\n                name={['user', 'name']}\n                label=\"Name\"\n                rules={[{\n                    required: true\n                }\n            ]}>\n                <Input/>\n            </Form.Item>\n            <Form.Item\n                name={['user', 'email']}\n                label=\"Email\"\n                rules={[{\n                    type: 'email'\n                }\n            ]}>\n                <Input/>\n            </Form.Item>\n            <Form.Item name={['user', 'introduction']} label=\"Introduction\">\n                <Input.TextArea />\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Projects from './Projects';\nimport Contact from './Contact';\nimport {ROUTES} from 'constants/Routes.js';\n\nconst App = () => (\n    <div>\n        <Router>\n            <Header/>\n            <Switch>\n                <Route path={ROUTES.HOME}>\n                    <Home/>\n                </Route>\n                <Route path={ROUTES.PROJECTS}>\n                  <Projects/>\n                </Route>\n                <Route path={ROUTES.CONTACT}>\n                  <Contact/>\n                </Route>\n                <Route path={ROUTES.ABOUT}>\n                  <Contact/>\n                </Route>\n            </Switch>\n        </Router>\n\n    </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}